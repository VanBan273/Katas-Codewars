An anagram is a word, a phrase, or a sentence formed from another by rearranging its letters. An example of this is "angel", which is an anagram of "glean".

Write a function that receives an array of words, and returns the total number of distinct pairs of anagramic words inside it.

Some examples:

There are 2 anagrams in the array ["dell", "ledl", "abc", "cba"]
There are 7 anagrams in the array ["dell", "ledl", "abc", "cba", "bca", "bac"]



Solution:

function anagramCounter (wordsArray) {
  let counter = 0;
  const orderedStringsArray=[]

  wordsArray.forEach(word =>{
    orderedStringsArray.push(word.split('').sort().join(''))
  })

  for(let i=0; i<orderedStringsArray.length; i++){
    for (let j=i+1; j<orderedStringsArray.length; j++){
      orderedStringsArray[i]===orderedStringsArray[j] ? counter +=1 : null
    }
  }
  return counter;
}


Other solution:


function anagramCounter(wordsArray) {
  let counter = 0;
  const newArr = wordsArray.map(el => el.toUpperCase().split("").sort().join(""));
  for(let i = 0; i < wordsArray.length; i++) {
    for(let j = 0; j < i; j++) {
      if(newArr[i] === newArr[j]) counter++;
    }
  }
  return counter;
}

